//1
void Liberar (TFila *Fila)
{
    TProduto item;
    while (!Vazia(*Fila))
    {
        Desenfileirar(Fila, &item);
    }
    free(Fila->frente);
}

//2

int EhIgual (TFila *Fila1, TFila *Fila2)
{
    if (Fila1->tamanho != Fila2->tamanho)
    {
        return 0;
    }
    else
    {
        int igualdade = 1;
        int n = GetTamanho(*Fila2);
        TProduto x;
        while(n != 0)
        {
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1,x).codigo == -1)
            {
                igualdade = 0;
            }
            Enfileirar(x, Fila2);
            n--;
        }
        return igualdade;
    }
}


//2

int EhIgual (TFila *Fila1, TFila *Fila2)
{
    if (Fila1->tamanho != Fila2->tamanho)
    {
        return 0;
    }
    else
    {
        int igualdade = 1;
        int n = GetTamanho(*Fila2);
        TProduto x;
        while(n != 0)
        {
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1,x).codigo == -1)
            {
                igualdade = 0;
            }
            Enfileirar(x, Fila2);
            n--;
        }
        return igualdade;
    }
}


//3
void ExcluirItemSelecionado (TFila *Fila1, int i)
{

    if(i<=0)
    {
        printf("\n|| ERRO || Incapaz de excluir a celula cabeÃ§a!\n");
    }
    else if( i > GetTamanho(*Fila1))
    {
        printf("\n|| ERRO || A Fila nao possuo %d celulas", i);
    }
    else
    {
        TFila FilaAux;
        TProduto x;
        int j=1;
        FFVazia(&FilaAux);
        while(!Vazia(*Fila1))
        {
            Desenfileirar(Fila1, &x);
            if(j != i)
                Enfileirar(x,&FilaAux);
            j++;
        }
        while(!Vazia(FilaAux))
        {
            Desenfileirar(&FilaAux,&x);
            Enfileirar(x,Fila1);
        }
        free(FilaAux.frente);
    }
}


//3

void ExcluirItem(TFila *Fila, int i){
    TProduto x;
    int j = 1;
    int n = GetTamanho(*Fila);
    while(n!=0){
            Desenfileirar(Fila,&x);
            if(j!=i)
                Enfileirar(x,Fila);
            j++;
        }
}


//4

void Intersecao2(TFila *Fila, TFila *Fila1, TFila *Fila3)
{

    TProduto x,y;
    int n = GetTamanho(*Fila);
    while(n!=0)
    {
        int m = GetTamanho(*Fila1);
        Desenfileirar(Fila,&x);
        while(m!=0)
        {
            Desenfileirar(Fila1,&y);
            if(x.codigo == y.codigo)
            {
                Enfileirar(y,Fila3);
                Enfileirar(y,Fila1);
                break;
            }
            Enfileirar(y,Fila1);
            m--;
        }
        Enfileirar(x,Fila);
        n--;
    }
}

//4

void Intersecao (TFila *Fila1, TFila *Fila2, TFila *Fila3) {
    if(!Vazia(*Fila1) && !Vazia(*Fila2)){
        int tam = GetTamanho(*Fila1);
        TProduto x;
        while(tam != 0) {
            Desenfileirar(Fila1, &x);
            if(Pesquisar(Fila2, x).codigo != -1)
                Enfileirar(x, Fila3);
            Enfileirar(x, Fila1);
            tam--;
        }
    }
}


//5

void Diferenca2(TFila *Fila1, TFila *Fila2, TFila *Fila3){
    if(!Vazia(*Fila1) && !Vazia(*Fila2)){
        TProduto x;
        int tam = GetTamanho(*Fila1);
        while(tam!=0){
            Desenfileirar(Fila1,&x);
            if(Pesquisar(Fila2,x).codigo == -1)
                Enfileirar(x,Fila3);
            Enfileirar(x,Fila1);
            tam--;
        }
        tam = GetTamanho(*Fila2);
        while(tam!=0){
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1, x).codigo == -1)
                Enfileirar(x, Fila3);
            Enfileirar(x, Fila2);
            tam--;
        }
    }
}
