//1
void Liberar (TFila *Fila)
{
    TProduto item;
    while (!Vazia(*Fila))
    {
        Desenfileirar(Fila, &item);
    }
    free(Fila->frente);
}

//2

int EhIgual (TFila *Fila1, TFila *Fila2)
{
    if (Fila1->tamanho != Fila2->tamanho)
    {
        return 0;
    }
    else
    {
        int igualdade = 1;
        int n = GetTamanho(*Fila2);
        TProduto x;
        while(n != 0)
        {
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1,x).codigo == -1)
            {
                igualdade = 0;
            }
            Enfileirar(x, Fila2);
            n--;
        }
        return igualdade;
    }
}


//2

int EhIgual (TFila *Fila1, TFila *Fila2)
{
    if (Fila1->tamanho != Fila2->tamanho)
    {
        return 0;
    }
    else
    {
        int igualdade = 1;
        int n = GetTamanho(*Fila2);
        TProduto x;
        while(n != 0)
        {
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1,x).codigo == -1)
            {
                igualdade = 0;
            }
            Enfileirar(x, Fila2);
            n--;
        }
        return igualdade;
    }
}


//2 - OLHANDO TODOS OS CASOS

int EhIgual(TFila *Fila1, TFila *Fila2){
    if(!Vazia(*Fila1) && !Vazia(*Fila2)){
        if(GetTamanho(*Fila1) == GetTamanho(*Fila2)){
            int n = GetTamanho(*Fila1);
            TProduto x,y;
            TFila F1aux,F2aux;
            FFVazia(&F1aux);
            FFVazia(&F2aux);
            while(n!=0){
                Desenfileirar(Fila1,&x);
                Enfileirar(x,&F1aux);
                Enfileirar(x,Fila1);
                n--;
            }
            int m = GetTamanho(*Fila2);
            while(m!=0){
                Desenfileirar(Fila2,&x);
                Enfileirar(x,&F2aux);
                Enfileirar(x,Fila2);
                m--;
            }
            n=GetTamanho(F1aux);
            while(n!=0){
                Desenfileirar(&F1aux,&x);
                m=GetTamanho(F2aux);
                while(m!=0){
                    Desenfileirar(&F2aux,&y);
                    if(x.codigo != y.codigo){
                        Enfileirar(y,&F2aux);
                    }else
                         break;
                    m--;
                }
                Enfileirar(x,&F1aux);
                n--;
            }
            if(GetTamanho(F2aux)==0){
                return 1;
            }else
                return 0;
            Liberar(&F1aux);
            Liberar(&F2aux);
        }
        return 0;
    }
    return 0;
}


//3
void ExcluirItemSelecionado (TFila *Fila1, int i)
{

    if(i<=0)
    {
        printf("\n|| ERRO || Incapaz de excluir a celula cabeÃ§a!\n");
    }
    else if( i > GetTamanho(*Fila1))
    {
        printf("\n|| ERRO || A Fila nao possuo %d celulas", i);
    }
    else
    {
        TFila FilaAux;
        TProduto x;
        int j=1;
        FFVazia(&FilaAux);
        while(!Vazia(*Fila1))
        {
            Desenfileirar(Fila1, &x);
            if(j != i)
                Enfileirar(x,&FilaAux);
            j++;
        }
        while(!Vazia(FilaAux))
        {
            Desenfileirar(&FilaAux,&x);
            Enfileirar(x,Fila1);
        }
        free(FilaAux.frente);
    }
}


//3

void RemoverItemSelecionado(TFila *Fila, int i){
    if(!Vazia(*Fila)){
        int n = GetTamanho(*Fila);
        int j=1;
        TProduto x;
        while(n!=0){
            Desenfileirar(Fila,&x);
            if(j!=i){
                Enfileirar(x,Fila);
            }
            j++;
            n--;
        }
    }
}


//4

void Intersecao2(TFila *Fila1, TFila *Fila2, TFila *Fila3)
{

    TProduto x,y;
    int n = GetTamanho(*Fila1);
    TFila F1,F2;
    FFVazia(&F1);
    FFVazia(&F2);
    while(n!=0){
        Desenfileirar(Fila1,&x);
        Enfileirar(x,&F1);
        Enfileirar(x,Fila1);
        n--;
    }
    int m = GetTamanho(*Fila2);
    while(m!=0){
        Desenfileirar(Fila2,&x);
        Enfileirar(x,&F2);
        Enfileirar(x,Fila2);
        m--;
    }
    n = GetTamanho(F1);
    while(n!=0)
    {
        m = GetTamanho(F2);
        Desenfileirar(&F1,&x);
        while(m!=0)
        {
            Desenfileirar(&F2,&y);
            if(x.codigo == y.codigo)
            {
                Enfileirar(y,Fila3);
            }else
                Enfileirar(y,&F2);
            m--;
        }
        Enfileirar(x,&F1);
        n--;
    }
    Liberar(&F1);
    Liberar(&F2);
}

//4

void Intersecao (TFila *Fila1, TFila *Fila2, TFila *Fila3) {
    if(!Vazia(*Fila1) && !Vazia(*Fila2)){
        int tam = GetTamanho(*Fila1);
        TProduto x;
        while(tam != 0) {
            Desenfileirar(Fila1, &x);
            if(Pesquisar(Fila2, x).codigo != -1 && Pesquisar(Fila3,x).codigo != x.codigo)
                Enfileirar(x, Fila3);
            Enfileirar(x, Fila1);
            tam--;
        }
    }
}


//5

void Diferenca2(TFila *Fila1, TFila *Fila2, TFila *Fila3){
    if(!Vazia(*Fila1) && !Vazia(*Fila2)){
        TProduto x;
        int m = GetTamanho(*Fila1);
        int n = GetTamanho(*Fila2);
        while(m!=0){
            Desenfileirar(Fila1,&x);
            if(Pesquisar(Fila2,x).codigo == -1)
                Enfileirar(x,Fila3);
            Enfileirar(x,Fila1);
            m--;
        }
        while(n!=0){
            Desenfileirar(Fila2, &x);
            if(Pesquisar(Fila1, x).codigo == -1)
                Enfileirar(x, Fila3);
            Enfileirar(x, Fila2);
            n--;
        }
    }
}
